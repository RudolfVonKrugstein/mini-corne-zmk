/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

/ {
        behaviors {
            lhm: left_homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                tapping-term-ms = <200>;    // <---[[moderate duration]]
                quick-tap-ms = <0>;
                flavor = "balanced";
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 36 37 38 39 40 41>;
            };
            rhm: right_homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                tapping-term-ms = <200>;    // <---[[moderate duration]]
                quick-tap-ms = <0>;
                flavor = "balanced";
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = <0 1 2 3 4  5  12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            };
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                tapping-term-ms = <200>;    // <---[[moderate duration]]
                quick-tap-ms = <0>;
                flavor = "balanced";
                bindings = <&kp>, <&kp>;
            };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &none   &lt 6 Q &kp       W &kp E       &kp R        &kp   T      &lt 5 Y                 &kp U        &kp I       &kp O         &kp P    &none
   &none   &kp   A &lhm LWIN S &lhm LALT D &lhm LCTRL F &lt 3 G      &lt 4 H                 &rhm RCTRL J &rhm LALT K &rhm LWIN L   &kp BSPC &none
   &none   &kp   Z &kp       X &kp C       &kp V        &kp   B      &kp   N                 &kp M        &kp COMMA   &kp DOT       &kp TAB  &none
                               &mo 1       &sl 2        &sk LSHIFT   &hm RSHIFT LC(LBKT) &lt 2 SPACE  &mo 1
                        >;
                };
                layer_num {
                        bindings = <
   &none   &kp F1 &kp      F2  &kp F3       &kp F4        &kp   F5      &kp   F6   &kp F7        &kp F8       &kp F9         &kp F10    &none
   &none   &kp N1 &lhm LWIN N2 &lhm LALT N3 &lhm LCTRL N4 &lt 3 N5      &lt 4 N6   &rhm RCTRL N7 &rhm LALT N8 &rhm LWIN N9   &kp N0     &none
   &none   &none  &none        &none        &none         &none         &none      &none         &none        &none          &none      &none
                               &trans       &none         &trans        &trans     &none         &trans
                        >;
                };
                layer_sym {
                        bindings = <
   &none   &kp PERCENT  &kp  LPAR      &kp RPAR       &kp SEMICOLON    &kp CARET    &kp AMPERSAND &kp DOUBLE_QUOTES &kp LESS_THAN  &kp GREATER_THAN &kp SINGLE_QUOTE  &none
   &none   &kp QUESTION &lhm LWIN LBKT &lhm LALT RBKT &lhm LCTRL COLON &kp SLASH    &kp HASH      &rhm RCTRL EQUAL  &rhm LALT PLUS &rhm LWIN STAR   &kp EXCLAMATION   &none
   &none   &kp AT_SIGN  &kp  LBRC      &kp RBRC     &kp DOLLAR       &kp TILDE    &kp MINUS     &kp UNDERSCORE    &kp GRAVE      &kp PIPE         &kp BACKSLASH     &none
                                       &none          &none            &caps_word   &caps_word    &kp ENTER         &none
                        >;
                };
                layer_nav {
                        bindings = <
   &none   &none  &none    &none     &none     &none         &kp HOME &kp PG_DN  &kp PG_UP &kp END   &none       &none
   &none   &none  &kp LWIN &kp LALT  &kp LCTRL &none         &kp LEFT &kp DOWN   &kp UP    &kp RIGHT &trans      &none
   &none   &none  &none    &none     &none     &none         &none    &kp ESCAPE &none     &none     &none       &trans
                           &none     &none     &trans        &trans      &none      &none
                        >;
                };
                layer_intl {
                        bindings = <
   &none   &none  &kp RA(S)    &kp RA(Y)    &kp RA(P)     &kp RA(Q)     &kp RA(Q) &kp RA(P) &kp RA(Y)    &kp RA(S) &none      &none
   &none   &none  &kp LWIN     &kp LALT     &kp LCTRL     &none         &none     &kp RCTRL &kp LALT     &kp RWIN  &none      &none
   &none   &none  &none        &none        &none         &none         &none     &none     &none        &none     &none      &none
                               &none        &none         &trans        &trans    &none     &none
                        >;
                };
                layer_mouse {
                        bindings = <
   &none   &none  &none        &none        &none         &mkp MB5      &none   &mkp LCLK &mkp MCLK    &mkp RCLK      &none      &none
   &none   &none  &none        &none        &none         &mkp MB4      &none   &none     &trans       &none          &trans     &none
   &none   &none  &none        &none        &none         &none         &none   &none     &none        &none          &trans     &none
                               &none        &none         &trans        &trans  &none     &none
                        >;
                };
                layer_blt {
                        bindings = <
   &none   &none  &sys_reset   &bootloader  &none         &none         &bt BT_CLR   &none        &bootloader  &sys_reset   &none   &none
   &none   &none  &none        &none        &none         &none         &none        &none        &none        &none        &none        &none
   &none   &none  &none        &none        &none         &none         &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none
                               &none        &none         &none         &none        &none        &none
                        >;
                };
        };
};
